{"ast":null,"code":"var _jsxFileName = \"/Users/migtamrod/AppName/src/App/Components/SlideShow.js\";\nimport React from \"react\";\nimport { IonSlides, IonSlide, IonCardTitle, IonImg, IonCard } from \"@ionic/react\";\n\nconst SlideShow = () => {\n  const slides = [{\n    id: 0,\n    url: \"\"\n  }, {\n    id: 1,\n    url: \"\"\n  }, {\n    id: 2,\n    url: \"\"\n  }, {\n    id: 3,\n    url: \"\"\n  }, {\n    id: 4,\n    url: \"\"\n  }];\n  return React.createElement(IonSlides, {\n    style: {\n      width: \"100%\",\n      height: 200\n    },\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, slides.map(({\n    id,\n    url\n  }) => React.createElement(IonSlide, {\n    key: id,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px gray dashed\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(IonCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(IonCardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, id), React.createElement(\"img\", {\n    src: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))));\n};\n\nexport default SlideShow;\nconst options = {\n  on: {\n    beforeInit() {\n      const swiper = this;\n      swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass, \"fade\"));\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true\n      };\n      swiper.params = Object.assign(swiper.params, overwriteParams);\n      swiper.params = Object.assign(swiper.originalParams, overwriteParams);\n    },\n\n    setTranslate() {\n      const swiper = this;\n      const slides = swiper.slides;\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = swiper.slides.eq(i);\n        const offset$$1 = $slideEl[0].swiperSlideOffset;\n        let tx = -offset$$1;\n        if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n        let ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n\n        const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl.css({\n          opacity: slideOpacity\n        }).transform(\"translate3d(\".concat(tx, \"px, \").concat(ty, \"px, 0px)\"));\n      }\n    },\n\n    setTransition(duration) {\n      const swiper = this;\n      const slides = swiper.slides,\n            $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        let eventTriggered = false;\n        slides.transitionEnd(() => {\n          if (eventTriggered) return;\n          if (!swiper || swiper.destroyed) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (let i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/migtamrod/AppName/src/App/Components/SlideShow.js"],"names":["React","IonSlides","IonSlide","IonCardTitle","IonImg","IonCard","SlideShow","slides","id","url","width","height","options","map","border","on","beforeInit","swiper","classNames","push","params","containerModifierClass","overwriteParams","slidesPerView","slidesPerColumn","slidesPerGroup","watchSlidesProgress","spaceBetween","virtualTranslate","Object","assign","originalParams","setTranslate","i","length","$slideEl","eq","offset$$1","swiperSlideOffset","tx","translate","ty","isHorizontal","slideOpacity","fadeEffect","crossFade","Math","max","abs","progress","min","css","opacity","transform","setTransition","duration","$wrapperEl","transition","eventTriggered","transitionEnd","destroyed","animating","triggerEvents","trigger"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  IonSlides,\n  IonSlide,\n  IonCardTitle,\n  IonImg,\n  IonCard\n} from \"@ionic/react\";\n\nconst SlideShow = () => {\n  const slides = [\n    {\n      id: 0,\n      url: \"\"\n    },\n    {\n      id: 1,\n      url: \"\"\n    },\n    {\n      id: 2,\n      url: \"\"\n    },\n    {\n      id: 3,\n      url: \"\"\n    },\n    {\n      id: 4,\n      url: \"\"\n    }\n  ];\n  return (\n    <IonSlides style={{ width: \"100%\", height: 200 }} options={options}>\n      {slides.map(({ id, url }) => (\n        <IonSlide\n          key={id}\n          style={{ width: \"100%\", height: \"100%\", border: \"1px gray dashed\" }}\n        >\n          <IonCard>\n            <IonCardTitle>{id}</IonCardTitle>\n            <img src={url} />\n          </IonCard>\n        </IonSlide>\n      ))}\n    </IonSlides>\n  );\n};\n\nexport default SlideShow;\n\nconst options = {\n    on: {\n        beforeInit() {\n          const swiper = this;\n          swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n          const overwriteParams = {\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: true,\n            spaceBetween: 0,\n            virtualTranslate: true,\n          };\n          swiper.params = Object.assign(swiper.params, overwriteParams);\n          swiper.params = Object.assign(swiper.originalParams, overwriteParams);\n        },\n        setTranslate() {\n          const swiper = this;\n          const { slides } = swiper;\n          for (let i = 0; i < slides.length; i += 1) {\n            const $slideEl = swiper.slides.eq(i);\n            const offset$$1 = $slideEl[0].swiperSlideOffset;\n            let tx = -offset$$1;\n            if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n            let ty = 0;\n            if (!swiper.isHorizontal()) {\n              ty = tx;\n              tx = 0;\n            }\n            const slideOpacity = swiper.params.fadeEffect.crossFade\n              ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n              : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n            $slideEl\n              .css({\n                opacity: slideOpacity,\n              })\n              .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n          }\n        },\n        setTransition(duration) {\n          const swiper = this;\n          const { slides, $wrapperEl } = swiper;\n          slides.transition(duration);\n          if (swiper.params.virtualTranslate && duration !== 0) {\n            let eventTriggered = false;\n            slides.transitionEnd(() => {\n              if (eventTriggered) return;\n              if (!swiper || swiper.destroyed) return;\n              eventTriggered = true;\n              swiper.animating = false;\n              const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n              for (let i = 0; i < triggerEvents.length; i += 1) {\n                $wrapperEl.trigger(triggerEvents[i]);\n              }\n            });\n          }\n        },\n      }\n};\n"]},"metadata":{},"sourceType":"module"}
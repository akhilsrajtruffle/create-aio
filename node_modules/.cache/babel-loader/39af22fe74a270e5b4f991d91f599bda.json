{"ast":null,"code":"import firebase from \"firebase\";\nimport { config } from './config';\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/messaging/\";\nimport \"firebase/storage\";\nexport default class Firebase {\n  constructor() {\n    this.isSignedIn = setIsSignedIn => {\n      var user = this.auth.onAuthStateChanged(user => user);\n\n      if (user) {\n        setIsSignedIn(true);\n        return true;\n      } else {\n        setIsSignedIn(false);\n        return false;\n      }\n    };\n\n    this.doCreateUserWithEmailAndPassword = (email, password) => {\n      this.auth.createUserWithEmailAndPassword(email, password);\n    };\n\n    this.signIn = () => {\n      this.auth.signInWithPopup();\n    };\n\n    this.doSignInWithEmailAndPassword = (email, password) => {\n      this.auth.signInWithEmailAndPassword(email, password);\n    };\n\n    this.doSignOut = () => {\n      this.auth.signOut();\n    };\n\n    this.doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    try {\n      if (!firebase.apps.length) {\n        firebase.initializeApp(config);\n      } else {\n        firebase.app();\n      }\n\n      this.auth = firebase.auth();\n      this.ref = firebase.firestore();\n      this.ana = firebase.analytics();\n      console.log(\"Firebase Started\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/migtamrod/AppName/src/App/Util/Firebase/Firebase.js"],"names":["firebase","config","Firebase","constructor","isSignedIn","setIsSignedIn","user","auth","onAuthStateChanged","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","signIn","signInWithPopup","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","apps","length","initializeApp","app","ref","firestore","ana","analytics","console","log","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;AACA,OAAO,qBAAP;AACA,OAAO,kBAAP;AAEA,eAAe,MAAMC,QAAN,CAAe;AAC5BC,EAAAA,WAAW,GAAG;AAAA,SAedC,UAfc,GAeDC,aAAa,IAAI;AAC5B,UAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,kBAAV,CAA6BF,IAAI,IAAIA,IAArC,CAAX;;AACA,UAAIA,IAAJ,EAAU;AACRD,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACLA,QAAAA,aAAa,CAAC,KAAD,CAAb;AACA,eAAO,KAAP;AACD;AACF,KAxBa;;AAAA,SAyBdI,gCAzBc,GAyBqB,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtD,WAAKJ,IAAL,CAAUK,8BAAV,CAAyCF,KAAzC,EAAgDC,QAAhD;AACD,KA3Ba;;AAAA,SA4BdE,MA5Bc,GA4BL,MAAM;AACb,WAAKN,IAAL,CAAUO,eAAV;AACD,KA9Ba;;AAAA,SAgCdC,4BAhCc,GAgCiB,CAACL,KAAD,EAAQC,QAAR,KAAqB;AAClD,WAAKJ,IAAL,CAAUS,0BAAV,CAAqCN,KAArC,EAA4CC,QAA5C;AACD,KAlCa;;AAAA,SAmCdM,SAnCc,GAmCF,MAAM;AAChB,WAAKV,IAAL,CAAUW,OAAV;AACD,KArCa;;AAAA,SAsCdC,eAtCc,GAsCIT,KAAK,IAAI,KAAKH,IAAL,CAAUa,sBAAV,CAAiCV,KAAjC,CAtCb;;AAAA,SAuCdW,gBAvCc,GAuCKV,QAAQ,IAAI,KAAKJ,IAAL,CAAUe,WAAV,CAAsBC,cAAtB,CAAqCZ,QAArC,CAvCjB;;AACZ,QAAI;AACF,UAAI,CAACX,QAAQ,CAACwB,IAAT,CAAcC,MAAnB,EAA2B;AACzBzB,QAAAA,QAAQ,CAAC0B,aAAT,CAAuBzB,MAAvB;AACD,OAFD,MAEO;AACLD,QAAAA,QAAQ,CAAC2B,GAAT;AACD;;AACD,WAAKpB,IAAL,GAAYP,QAAQ,CAACO,IAAT,EAAZ;AACA,WAAKqB,GAAL,GAAW5B,QAAQ,CAAC6B,SAAT,EAAX;AACA,WAAKC,GAAL,GAAW9B,QAAQ,CAAC+B,SAAT,EAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF;;AAf2B","sourcesContent":["import firebase from \"firebase\";\nimport {config} from './config'\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/messaging/\";\nimport \"firebase/storage\";\n\nexport default class Firebase {\n  constructor() {\n    try {\n      if (!firebase.apps.length) {\n        firebase.initializeApp(config);\n      } else {\n        firebase.app();\n      }\n      this.auth = firebase.auth();\n      this.ref = firebase.firestore();\n      this.ana = firebase.analytics();\n      console.log(\"Firebase Started\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  isSignedIn = setIsSignedIn => {\n    var user = this.auth.onAuthStateChanged(user => user);\n    if (user) {\n      setIsSignedIn(true);\n      return true;\n    } else {\n      setIsSignedIn(false);\n      return false;\n    }\n  };\n  doCreateUserWithEmailAndPassword = (email, password) => {\n    this.auth.createUserWithEmailAndPassword(email, password);\n  };\n  signIn = () => {\n    this.auth.signInWithPopup();\n  };\n\n  doSignInWithEmailAndPassword = (email, password) => {\n    this.auth.signInWithEmailAndPassword(email, password);\n  };\n  doSignOut = () => {\n    this.auth.signOut();\n  };\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n}\n"]},"metadata":{},"sourceType":"module"}
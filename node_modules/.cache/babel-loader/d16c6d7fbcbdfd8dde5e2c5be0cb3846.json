{"ast":null,"code":"var _jsxFileName = \"/Users/migtamrod/AppName/src/App/Components/SlideShow.js\";\nimport React from \"react\";\nimport { IonSlides, IonSlide, IonCardTitle, IonImg, IonCard } from \"@ionic/react\";\n\nconst SlideShow = () => {\n  const slides = [{\n    id: 0,\n    url: \"\"\n  }, {\n    id: 1,\n    url: \"\"\n  }, {\n    id: 2,\n    url: \"\"\n  }, {\n    id: 3,\n    url: \"\"\n  }, {\n    id: 4,\n    url: \"\"\n  }];\n  return React.createElement(IonSlides, {\n    style: {\n      width: \"100%\",\n      height: 200\n    },\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, slides.map(({\n    id,\n    url\n  }) => React.createElement(IonSlide, {\n    key: id,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      border: \"1px gray dashed\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(IonCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(IonCardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, id), React.createElement(\"img\", {\n    src: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))));\n};\n\nexport default SlideShow;\nconst options = {\n  slidesPerView: 1,\n  coverflowEffect: {\n    rotate: 50,\n    stretch: 0,\n    depth: 100,\n    modifier: 1,\n    slideShadows: true\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass, \"coverflow\"));\n      swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass, \"3d\"));\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n\n    setTranslate() {\n      const swiper = this;\n      const swiperWidth = swiper.width,\n            swiperHeight = swiper.height,\n            slides = swiper.slides,\n            $wrapperEl = swiper.$wrapperEl,\n            slidesSizesGrid = swiper.slidesSizesGrid,\n            $ = swiper.$;\n      const params = swiper.params.coverflowEffect;\n      const isHorizontal = swiper.isHorizontal();\n      const transform$$1 = swiper.translate;\n      const center = isHorizontal ? -transform$$1 + swiperWidth / 2 : -transform$$1 + swiperHeight / 2;\n      const rotate = isHorizontal ? params.rotate : -params.rotate;\n      const translate = params.depth; // Each slide offset from center\n\n      for (let i = 0, length = slides.length; i < length; i += 1) {\n        const $slideEl = slides.eq(i);\n        const slideSize = slidesSizesGrid[i];\n        const slideOffset = $slideEl[0].swiperSlideOffset;\n        const offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n        let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n        let translateZ = -translate * Math.abs(offsetMultiplier);\n        let translateY = isHorizontal ? 0 : params.stretch * offsetMultiplier;\n        let translateX = isHorizontal ? params.stretch * offsetMultiplier : 0; // Fix for ultra small values\n\n        if (Math.abs(translateX) < 0.001) translateX = 0;\n        if (Math.abs(translateY) < 0.001) translateY = 0;\n        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        const slideTransform = \"translate3d(\".concat(translateX, \"px,\").concat(translateY, \"px,\").concat(translateZ, \"px)  rotateX(\").concat(rotateX, \"deg) rotateY(\").concat(rotateY, \"deg)\");\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n        if (params.slideShadows) {\n          // Set shadows\n          let $shadowBeforeEl = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n          let $shadowAfterEl = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = swiper.$(\"<div class=\\\"swiper-slide-shadow-\".concat(isHorizontal ? \"left\" : \"top\", \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = swiper.$(\"<div class=\\\"swiper-slide-shadow-\".concat(isHorizontal ? \"right\" : \"bottom\", \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n\n          if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n          if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n        }\n      } // Set correct perspective for IE10\n\n\n      if (swiper.support.pointerEvents || swiper.support.prefixedPointerEvents) {\n        const ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = \"\".concat(center, \"px 50%\");\n      }\n    },\n\n    setTransition(duration) {\n      const swiper = this;\n      swiper.slides.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/migtamrod/AppName/src/App/Components/SlideShow.js"],"names":["React","IonSlides","IonSlide","IonCardTitle","IonImg","IonCard","SlideShow","slides","id","url","width","height","options","map","border","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","on","beforeInit","swiper","classNames","push","params","containerModifierClass","watchSlidesProgress","originalParams","setTranslate","swiperWidth","swiperHeight","$wrapperEl","slidesSizesGrid","$","isHorizontal","transform$$1","translate","center","i","length","$slideEl","eq","slideSize","slideOffset","swiperSlideOffset","offsetMultiplier","rotateY","rotateX","translateZ","Math","abs","translateY","translateX","slideTransform","transform","style","zIndex","round","$shadowBeforeEl","find","$shadowAfterEl","append","opacity","support","pointerEvents","prefixedPointerEvents","ws","perspectiveOrigin","setTransition","duration","transition"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  IonSlides,\n  IonSlide,\n  IonCardTitle,\n  IonImg,\n  IonCard\n} from \"@ionic/react\";\n\nconst SlideShow = () => {\n  const slides = [\n    {\n      id: 0,\n      url: \"\"\n    },\n    {\n      id: 1,\n      url: \"\"\n    },\n    {\n      id: 2,\n      url: \"\"\n    },\n    {\n      id: 3,\n      url: \"\"\n    },\n    {\n      id: 4,\n      url: \"\"\n    }\n  ];\n  return (\n    <IonSlides style={{ width: \"100%\", height: 200 }} options={options}>\n      {slides.map(({ id, url }) => (\n        <IonSlide\n          key={id}\n          style={{ width: \"100%\", height: \"100%\", border: \"1px gray dashed\" }}\n        >\n          <IonCard>\n            <IonCardTitle>{id}</IonCardTitle>\n            <img src={url} />\n          </IonCard>\n        </IonSlide>\n      ))}\n    </IonSlides>\n  );\n};\n\nexport default SlideShow;\n\nconst options = {\n  slidesPerView: 1,\n  coverflowEffect: {\n    rotate: 50,\n    stretch: 0,\n    depth: 100,\n    modifier: 1,\n    slideShadows: true\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n\n      swiper.classNames.push(\n        `${swiper.params.containerModifierClass}coverflow`\n      );\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      const {\n        width: swiperWidth,\n        height: swiperHeight,\n        slides,\n        $wrapperEl,\n        slidesSizesGrid,\n        $\n      } = swiper;\n      const params = swiper.params.coverflowEffect;\n      const isHorizontal = swiper.isHorizontal();\n      const transform$$1 = swiper.translate;\n      const center = isHorizontal\n        ? -transform$$1 + swiperWidth / 2\n        : -transform$$1 + swiperHeight / 2;\n      const rotate = isHorizontal ? params.rotate : -params.rotate;\n      const translate = params.depth;\n      // Each slide offset from center\n      for (let i = 0, length = slides.length; i < length; i += 1) {\n        const $slideEl = slides.eq(i);\n        const slideSize = slidesSizesGrid[i];\n        const slideOffset = $slideEl[0].swiperSlideOffset;\n        const offsetMultiplier =\n          ((center - slideOffset - slideSize / 2) / slideSize) *\n          params.modifier;\n\n        let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        let translateZ = -translate * Math.abs(offsetMultiplier);\n\n        let translateY = isHorizontal ? 0 : params.stretch * offsetMultiplier;\n        let translateX = isHorizontal ? params.stretch * offsetMultiplier : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) translateX = 0;\n        if (Math.abs(translateY) < 0.001) translateY = 0;\n        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n        const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          let $shadowBeforeEl = isHorizontal\n            ? $slideEl.find(\".swiper-slide-shadow-left\")\n            : $slideEl.find(\".swiper-slide-shadow-top\");\n          let $shadowAfterEl = isHorizontal\n            ? $slideEl.find(\".swiper-slide-shadow-right\")\n            : $slideEl.find(\".swiper-slide-shadow-bottom\");\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = swiper.$(\n              `<div class=\"swiper-slide-shadow-${\n                isHorizontal ? \"left\" : \"top\"\n              }\"></div>`\n            );\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = swiper.$(\n              `<div class=\"swiper-slide-shadow-${\n                isHorizontal ? \"right\" : \"bottom\"\n              }\"></div>`\n            );\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length)\n            $shadowBeforeEl[0].style.opacity =\n              offsetMultiplier > 0 ? offsetMultiplier : 0;\n          if ($shadowAfterEl.length)\n            $shadowAfterEl[0].style.opacity =\n              -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (\n        swiper.support.pointerEvents ||\n        swiper.support.prefixedPointerEvents\n      ) {\n        const ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = `${center}px 50%`;\n      }\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find(\n          \".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\"\n        )\n        .transition(duration);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}